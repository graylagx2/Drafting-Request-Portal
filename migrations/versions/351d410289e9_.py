"""empty message

Revision ID: 351d410289e9
Revises: 
Create Date: 2025-07-08 17:01:13.644840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '351d410289e9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_masters',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_number', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('unit', sa.String(length=50), nullable=False),
    sa.Column('sheet_number', sa.String(length=20), nullable=False),
    sa.Column('discipline', sa.String(length=100), nullable=True),
    sa.Column('responsible_engineer', sa.String(length=100), nullable=True),
    sa.Column('originating_department', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('DR', 'FR', 'FC', 'AB', 'SP', name='statuscode'), nullable=False),
    sa.Column('sensitivity', sa.Enum('PUBLIC', 'INTERNAL', 'CONFIDENTIAL', name='sensitivityclass'), nullable=False),
    sa.Column('compliance', sa.Enum('ISO_9001', 'API_STANDARD', 'HSE_CATEGORY', name='compliancetag'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('effective_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('review_due', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retired_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_master', sa.Boolean(), nullable=True),
    sa.Column('retention_rule', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_masters_document_number'), 'document_masters', ['document_number'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('actual_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'DOC_CONTROL_ADMIN', 'DRAFTER', 'ENGINEER', 'QC', 'VIEWER', name='role_enum', native_enum=False), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('change_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('master_id', sa.UUID(), nullable=False),
    sa.Column('requested_by_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('impact_assessment', sa.Text(), nullable=True),
    sa.Column('risk_level', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('DR', 'FR', 'FC', 'AB', 'SP', name='statuscode'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['master_id'], ['document_masters.id'], ),
    sa.ForeignKeyConstraint(['requested_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_revisions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('master_id', sa.UUID(), nullable=False),
    sa.Column('revision_code', sa.Enum('A', 'B', 'C', 'D', 'E', name='revisioncode'), nullable=False),
    sa.Column('file_key', sa.String(length=512), nullable=False),
    sa.Column('checksum', sa.String(length=128), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('uploaded_by_id', sa.Integer(), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['master_id'], ['document_masters.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_revisions_master_id'), 'document_revisions', ['master_id'], unique=False)
    op.create_table('drafting_tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_number', sa.String(length=20), nullable=False),
    sa.Column('work_order', sa.String(length=100), nullable=True),
    sa.Column('moc', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('request_type', sa.String(length=50), nullable=False),
    sa.Column('review_engineer_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to_id', sa.Integer(), nullable=True),
    sa.Column('submitted_by_id', sa.Integer(), nullable=True),
    sa.Column('project_engineer_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('assigned_viewed', sa.Boolean(), nullable=True),
    sa.Column('service', sa.String(length=100), nullable=True),
    sa.Column('pipe_spec', sa.String(length=100), nullable=True),
    sa.Column('operating_psig', sa.String(length=50), nullable=True),
    sa.Column('operating_temp', sa.String(length=50), nullable=True),
    sa.Column('design_psig', sa.String(length=50), nullable=True),
    sa.Column('design_temp', sa.String(length=50), nullable=True),
    sa.Column('nde_rt', sa.String(length=20), nullable=True),
    sa.Column('nde_pt', sa.String(length=20), nullable=True),
    sa.Column('pressure_test', sa.String(length=50), nullable=True),
    sa.Column('paint_spec', sa.String(length=100), nullable=True),
    sa.Column('pwht_temp', sa.String(length=50), nullable=True),
    sa.Column('pwht_hold', sa.String(length=50), nullable=True),
    sa.Column('insulation_spec', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_engineer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['review_engineer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['submitted_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drafting_tickets_assigned_to_id'), 'drafting_tickets', ['assigned_to_id'], unique=False)
    op.create_index(op.f('ix_drafting_tickets_project_engineer_id'), 'drafting_tickets', ['project_engineer_id'], unique=False)
    op.create_index(op.f('ix_drafting_tickets_review_engineer_id'), 'drafting_tickets', ['review_engineer_id'], unique=False)
    op.create_index(op.f('ix_drafting_tickets_status'), 'drafting_tickets', ['status'], unique=False)
    op.create_index(op.f('ix_drafting_tickets_submitted_by_id'), 'drafting_tickets', ['submitted_by_id'], unique=False)
    op.create_index(op.f('ix_drafting_tickets_ticket_number'), 'drafting_tickets', ['ticket_number'], unique=True)
    op.create_table('folders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(length=512), nullable=False),
    sa.Column('sensitivity', sa.Enum('CONFIDENTIAL', 'INTERNAL', 'PUBLIC', name='sensitivity_enum', native_enum=False), nullable=False),
    sa.Column('allowed_roles', sa.JSON(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('path')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quality_forms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submitted_by_id', sa.Integer(), nullable=True),
    sa.Column('form_type', sa.String(length=100), nullable=False),
    sa.Column('data_json', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['submitted_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('checkout_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('revision_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('purpose', sa.String(length=255), nullable=True),
    sa.Column('checked_out_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('returned_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['revision_id'], ['document_revisions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_checkout_logs_revision_id'), 'checkout_logs', ['revision_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_number', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('IN_DEVELOPMENT', 'UNDER_REVIEW', 'APPROVED', 'ARCHIVED', 'SUPERSEDED', name='documentstatus'), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['drafting_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_document_number'), 'documents', ['document_number'], unique=True)
    op.create_table('review_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ticket_id'], ['drafting_tickets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_comments_ticket_id'), 'review_comments', ['ticket_id'], unique=False)
    op.create_index(op.f('ix_review_comments_user_id'), 'review_comments', ['user_id'], unique=False)
    op.create_table('ticket_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('uploaded_by_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('is_latest', sa.Boolean(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['drafting_tickets.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review_comment_read_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['review_comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('revision_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('revision_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('submitted_by_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['submitted_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_revision_history_document_id'), 'revision_history', ['document_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_revision_history_document_id'), table_name='revision_history')
    op.drop_table('revision_history')
    op.drop_table('review_comment_read_status')
    op.drop_table('ticket_attachments')
    op.drop_index(op.f('ix_review_comments_user_id'), table_name='review_comments')
    op.drop_index(op.f('ix_review_comments_ticket_id'), table_name='review_comments')
    op.drop_table('review_comments')
    op.drop_index(op.f('ix_documents_document_number'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_checkout_logs_revision_id'), table_name='checkout_logs')
    op.drop_table('checkout_logs')
    op.drop_table('quality_forms')
    op.drop_table('projects')
    op.drop_table('folders')
    op.drop_index(op.f('ix_drafting_tickets_ticket_number'), table_name='drafting_tickets')
    op.drop_index(op.f('ix_drafting_tickets_submitted_by_id'), table_name='drafting_tickets')
    op.drop_index(op.f('ix_drafting_tickets_status'), table_name='drafting_tickets')
    op.drop_index(op.f('ix_drafting_tickets_review_engineer_id'), table_name='drafting_tickets')
    op.drop_index(op.f('ix_drafting_tickets_project_engineer_id'), table_name='drafting_tickets')
    op.drop_index(op.f('ix_drafting_tickets_assigned_to_id'), table_name='drafting_tickets')
    op.drop_table('drafting_tickets')
    op.drop_index(op.f('ix_document_revisions_master_id'), table_name='document_revisions')
    op.drop_table('document_revisions')
    op.drop_table('change_requests')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_document_masters_document_number'), table_name='document_masters')
    op.drop_table('document_masters')
    # ### end Alembic commands ###
